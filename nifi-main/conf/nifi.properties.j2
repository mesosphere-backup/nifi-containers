# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

nifi.flow.configuration.file={{ NIFI_FLOW_CONFIGURATION_FILE|default("./conf/flow.xml.gz") }}
nifi.flow.configuration.archive.enabled={{ NIFI_FLOW_CONFIGURATION_ARCHIVE_ENABLED|default("true") }}
nifi.flow.configuration.archive.dir={{ NIFI_FLOW_CONFIGURATION_ARCHIVE_DIR|default("./conf/archive/") }}
nifi.flow.configuration.archive.max.time={{ NIFI_FLOW_CONFIGURATION_ARCHIVE_MAX_TIME|default("30 days") }}
nifi.flow.configuration.archive.max.storage={{ NIFI_FLOW_CONFIGURATION_ARCHIVE_MAX_STORAGE|default("500 MB") }}
nifi.flow.configuration.archive.max.count={{ NIFI_FLOW_CONFIGURATION_ARCHIVE_MAX_COUNT }}
nifi.flowcontroller.autoResumeState={{ NIFI_FLOWCONTROLLER_AUTORESUMESTATE|default("true") }}
nifi.flowcontroller.graceful.shutdown.period={{ NIFI_FLOWCONTROLLER_GRACEFUL_SHUTDOWN_PERIOD|default("10 sec") }}
nifi.flowservice.writedelay.interval={{ NIFI_FLOWSERVICE_WRITEDELAY_INTERVAL|default("500 ms") }}
nifi.administrative.yield.duration={{ NIFI_ADMINISTRATIVE_YIELD_DURATION|default("30 sec") }}
nifi.bored.yield.duration={{ NIFI_BORED_YIELD_DURATION|default("10 millis") }}
nifi.queue.backpressure.count={{ NIFI_QUEUE_BACKPRESSURE_COUNT|default("10000") }}
nifi.queue.backpressure.size={{ NIFI_QUEUE_BACKPRESSURE_SIZE|default("1 GB") }}

nifi.authorizer.configuration.file={{ NIFI_AUTHORIZER_CONFIGURATION_FILE|default("./conf/authorizers.xml") }}
nifi.login.identity.provider.configuration.file={{ NIFI_LOGIN_IDENTITY_PROVIDER_CONFIGURATION_FILE|default("./conf/login-identity-providers.xml") }}
nifi.templates.directory={{ NIFI_TEMPLATES_DIRECTORY|default("./conf/templates") }}
nifi.ui.banner.text={{ NIFI_UI_BANNER_TEXT }}
nifi.ui.autorefresh.interval={{ NIFI_UI_AUTOREFRESH_INTERVAL|default("30 sec") }}
nifi.nar.library.directory={{ NIFI_NAR_LIBRARY_DIRECTORY|default("./lib") }}
nifi.nar.library.autoload.directory={{ NIFI_NAR_LIBRARY_AUTOLOAD_DIRECTORY|default("./extensions") }}
nifi.nar.working.directory={{ NIFI_NAR_WORKING_DIRECTORY|default("./work/nar/") }}
nifi.documentation.working.directory={{ NIFI_DOCUMENTATION_WORKING_DIRECTORY|default("./work/docs/components") }}

nifi.state.management.configuration.file={{ NIFI_STATE_MANAGEMENT_CONFIGURATION_FILE|default("./conf/state-management.xml") }}
nifi.state.management.provider.local={{ NIFI_STATE_MANAGEMENT_PROVIDER_LOCAL|default("local-provider") }}
nifi.state.management.provider.cluster={{ NIFI_STATE_MANAGEMENT_PROVIDER_CLUSTER|default("zk-provider") }}
nifi.state.management.embedded.zookeeper.start={{ NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_START|default("false") }}
nifi.state.management.embedded.zookeeper.properties={{ NIFI_STATE_MANAGEMENT_EMBEDDED_ZOOKEEPER_PROPERTIES|default("./conf/zookeeper.properties") }}

nifi.database.directory={{ NIFI_DATABASE_DIRECTORY|default("./database_repository") }}
nifi.h2.url.append={{ NIFI_H2_URL_APPEND|default(";LOCK_TIMEOUT=25000;WRITE_DELAY=0;AUTO_SERVER=FALSE") }}

nifi.flowfile.repository.implementation={{ NIFI_FLOWFILE_REPOSITORY_IMPLEMENTATION|default("org.apache.nifi.controller.repository.WriteAheadFlowFileRepository") }}
nifi.flowfile.repository.wal.implementation={{ NIFI_FLOWFILE_REPOSITORY_WAL_IMPLEMENTATION|default("org.apache.nifi.wali.SequentialAccessWriteAheadLog") }}
nifi.flowfile.repository.directory={{ NIFI_FLOWFILE_REPOSITORY_DIRECTORY|default("./flowfile_repository") }}
nifi.flowfile.repository.partitions={{ NIFI_FLOWFILE_REPOSITORY_PARTITIONS|default("256") }}
nifi.flowfile.repository.checkpoint.interval={{ NIFI_FLOWFILE_REPOSITORY_CHECKPOINT_INTERVAL|default("2 mins") }}
nifi.flowfile.repository.always.sync={{ NIFI_FLOWFILE_REPOSITORY_ALWAYS_SYNC|default("false") }}

nifi.swap.manager.implementation={{ NIFI_SWAP_MANAGER_IMPLEMENTATION|default("org.apache.nifi.controller.FileSystemSwapManager") }}
nifi.queue.swap.threshold={{ NIFI_QUEUE_SWAP_THRESHOLD|default("20000") }}
nifi.swap.in.period={{ NIFI_SWAP_IN_PERIOD|default("5 sec") }}
nifi.swap.in.threads={{ NIFI_SWAP_IN_THREADS|default("1") }}
nifi.swap.out.period={{ NIFI_SWAP_OUT_PERIOD|default("5 sec") }}
nifi.swap.out.threads={{ NIFI_SWAP_OUT_THREADS|default("4") }}

nifi.content.repository.implementation={{ NIFI_CONTENT_REPOSITORY_IMPLEMENTATION|default("org.apache.nifi.controller.repository.FileSystemRepository") }}
nifi.content.claim.max.appendable.size={{ NIFI_CONTENT_CLAIM_MAX_APPENDABLE_SIZE|default("1 MB") }}
nifi.content.claim.max.flow.files={{ NIFI_CONTENT_CLAIM_MAX_FLOW_FILES|default("100") }}
nifi.content.repository.directory.default={{ NIFI_CONTENT_REPOSITORY_DIRECTORY_DEFAULT|default("./content_repository") }}
nifi.content.repository.archive.max.retention.period={{ NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_RETENTION_PERIOD|default("12 hours") }}
nifi.content.repository.archive.max.usage.percentage={{ NIFI_CONTENT_REPOSITORY_ARCHIVE_MAX_USAGE_PERCENTAGE|default("50%") }}
nifi.content.repository.archive.enabled={{ NIFI_CONTENT_REPOSITORY_ARCHIVE_ENABLED|default("true") }}
nifi.content.repository.always.sync={{ NIFI_CONTENT_REPOSITORY_ALWAYS_SYNC|default("false") }}
nifi.content.viewer.url={{ NIFI_CONTENT_VIEWER_URL|default("../nifi-content-viewer/") }}

nifi.provenance.repository.implementation={{ NIFI_PROVENANCE_REPOSITORY_IMPLEMENTATION|default("org.apache.nifi.provenance.WriteAheadProvenanceRepository") }}
nifi.provenance.repository.debug.frequency={{ NIFI_PROVENANCE_REPOSITORY_DEBUG_FREQUENCY|default("1_000_000") }}
nifi.provenance.repository.encryption.key.provider.implementation={{ NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_IMPLEMENTATION }}
nifi.provenance.repository.encryption.key.provider.location={{ NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_PROVIDER_LOCATION }}
nifi.provenance.repository.encryption.key.id={{ NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY_ID }}
nifi.provenance.repository.encryption.key={{ NIFI_PROVENANCE_REPOSITORY_ENCRYPTION_KEY }}

nifi.provenance.repository.directory.default={{ NIFI_PROVENANCE_REPOSITORY_DIRECTORY_DEFAULT|default("./provenance_repository") }}
nifi.provenance.repository.max.storage.time={{ NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_TIME|default("24 hours") }}
nifi.provenance.repository.max.storage.size={{ NIFI_PROVENANCE_REPOSITORY_MAX_STORAGE_SIZE|default("1 GB") }}
nifi.provenance.repository.rollover.time={{ NIFI_PROVENANCE_REPOSITORY_ROLLOVER_TIME|default("30 secs") }}
nifi.provenance.repository.rollover.size={{ NIFI_PROVENANCE_REPOSITORY_ROLLOVER_SIZE|default("100 MB") }}
nifi.provenance.repository.query.threads={{ NIFI_PROVENANCE_REPOSITORY_QUERY_THREADS|default("2") }}
nifi.provenance.repository.index.threads={{ NIFI_PROVENANCE_REPOSITORY_INDEX_THREADS|default("2") }}
nifi.provenance.repository.compress.on.rollover={{ NIFI_PROVENANCE_REPOSITORY_COMPRESS_ON_ROLLOVER|default("true") }}
nifi.provenance.repository.always.sync={{ NIFI_PROVENANCE_REPOSITORY_ALWAYS_SYNC|default("false") }}
nifi.provenance.repository.indexed.fields={{ NIFI_PROVENANCE_REPOSITORY_INDEXED_FIELDS|default("EventType, FlowFileUUID, Filename, ProcessorID, Relationship") }}
nifi.provenance.repository.indexed.attributes={{ NIFI_PROVENANCE_REPOSITORY_INDEXED_ATTRIBUTES }}
nifi.provenance.repository.index.shard.size={{ NIFI_PROVENANCE_REPOSITORY_INDEX_SHARD_SIZE|default("500 MB") }}
nifi.provenance.repository.max.attribute.length={{ NIFI_PROVENANCE_REPOSITORY_MAX_ATTRIBUTE_LENGTH|default("65536") }}
nifi.provenance.repository.concurrent.merge.threads={{ NIFI_PROVENANCE_REPOSITORY_CONCURRENT_MERGE_THREADS|default("2") }}

nifi.provenance.repository.buffer.size={{ NIFI_PROVENANCE_REPOSITORY_BUFFER_SIZE|default("100000") }}

nifi.components.status.repository.implementation={{ NIFI_COMPONENTS_STATUS_REPOSITORY_IMPLEMENTATION|default("org.apache.nifi.controller.status.history.VolatileComponentStatusRepository") }}
nifi.components.status.repository.buffer.size={{ NIFI_COMPONENTS_STATUS_REPOSITORY_BUFFER_SIZE|default("1440") }}
nifi.components.status.snapshot.frequency={{ NIFI_COMPONENTS_STATUS_SNAPSHOT_FREQUENCY|default("1 min") }}

nifi.remote.input.host={{ NIFI_REMOTE_INPUT_HOST }}
nifi.remote.input.secure={{ NIFI_REMOTE_INPUT_SECURE|default("false") }}
nifi.remote.input.socket.port={{ NIFI_REMOTE_INPUT_SOCKET_PORT }}
nifi.remote.input.http.enabled={{ NIFI_REMOTE_INPUT_HTTP_ENABLED|default("true") }}
nifi.remote.input.http.transaction.ttl={{ NIFI_REMOTE_INPUT_HTTP_TRANSACTION_TTL|default("30 sec") }}
nifi.remote.contents.cache.expiration={{ NIFI_REMOTE_CONTENTS_CACHE_EXPIRATION|default("30 secs") }}

nifi.web.war.directory={{ NIFI_WEB_WAR_DIRECTORY|default("./lib") }}
nifi.web.http.host={{ NIFI_WEB_HTTP_HOST|default("") }}
nifi.web.http.port={{ NIFI_WEB_HTTP_PORT|default("") }}
nifi.web.http.network.interface.default={{ NIFI_WEB_HTTP_NETWORK_INTERFACE_DEFAULT }}
nifi.web.https.host={{ NIFI_WEB_HTTPS_HOST|default("") }}
nifi.web.https.port={{ NIFI_WEB_HTTPS_PORT|default("") }}
nifi.web.https.network.interface.default={{ NIFI_WEB_HTTPS_NETWORK_INTERFACE_DEFAULT }}
nifi.web.jetty.working.directory={{ NIFI_WEB_JETTY_WORKING_DIRECTORY|default("./work/jetty") }}
nifi.web.jetty.threads={{ NIFI_WEB_JETTY_THREADS|default("200") }}
nifi.web.max.header.size={{ NIFI_WEB_MAX_HEADER_SIZE|default("16 KB") }}
nifi.web.proxy.context.path={{ NIFI_WEB_PROXY_CONTEXT_PATH }}
nifi.web.proxy.host={{ NIFI_WEB_PROXY_HOST }}

nifi.sensitive.props.key={{ NIFI_SENSITIVE_PROPS_KEY }}
nifi.sensitive.props.key.protected={{ NIFI_SENSITIVE_PROPS_KEY_PROTECTED }}
nifi.sensitive.props.algorithm={{ NIFI_SENSITIVE_PROPS_ALGORITHM|default("PBEWITHMD5AND256BITAES-CBC-OPENSSL") }}
nifi.sensitive.props.provider={{ NIFI_SENSITIVE_PROPS_PROVIDER|default("BC") }}
nifi.sensitive.props.additional.keys={{ NIFI_SENSITIVE_PROPS_ADDITIONAL_KEYS }}

nifi.security.keystore={{ NIFI_SECURITY_KEYSTORE }}
nifi.security.keystoreType={{ NIFI_SECURITY_KEYSTORETYPE }}
nifi.security.keystorePasswd={{ NIFI_SECURITY_KEYSTOREPASSWD }}
nifi.security.keyPasswd={{ NIFI_SECURITY_KEYPASSWD }}
nifi.security.truststore={{ NIFI_SECURITY_TRUSTSTORE }}
nifi.security.truststoreType={{ NIFI_SECURITY_TRUSTSTORETYPE }}
nifi.security.truststorePasswd={{ NIFI_SECURITY_TRUSTSTOREPASSWD }}
nifi.security.user.authorizer={{ NIFI_SECURITY_USER_AUTHORIZER|default("managed-authorizer") }}
nifi.security.user.login.identity.provider={{ NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER }}
nifi.security.ocsp.responder.url={{ NIFI_SECURITY_OCSP_RESPONDER_URL }}
nifi.security.ocsp.responder.certificate={{ NIFI_SECURITY_OCSP_RESPONDER_CERTIFICATE }}

nifi.security.user.oidc.discovery.url={{ NIFI_SECURITY_USER_OIDC_DISCOVERY_URL }}
nifi.security.user.oidc.connect.timeout={{ NIFI_SECURITY_USER_OIDC_CONNECT_TIMEOUT|default("5 secs") }}
nifi.security.user.oidc.read.timeout={{ NIFI_SECURITY_USER_OIDC_READ_TIMEOUT|default("5 secs") }}
nifi.security.user.oidc.client.id={{ NIFI_SECURITY_USER_OIDC_CLIENT_ID }}
nifi.security.user.oidc.client.secret={{ NIFI_SECURITY_USER_OIDC_CLIENT_SECRET }}
nifi.security.user.oidc.preferred.jwsalgorithm={{ NIFI_SECURITY_USER_OIDC_PREFERRED_JWSALGORITHM }}

nifi.security.user.knox.url={{ NIFI_SECURITY_USER_KNOX_URL }}
nifi.security.user.knox.publicKey={{ NIFI_SECURITY_USER_KNOX_PUBLICKEY }}
nifi.security.user.knox.cookieName={{ NIFI_SECURITY_USER_KNOX_COOKIENAME|default("hadoop-jwt") }}
nifi.security.user.knox.audiences={{ NIFI_SECURITY_USER_KNOX_AUDIENCES }}

{% if NIFI_SEC_ID_MAP %}
    nifi.security.identity.mapping.pattern.dn={{ NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_DN|default("^CN=(.*?), OU=(.*?), O=(.*?), L=(.*?), ST=(.*?), C=(.*?)$") }}
    nifi.security.identity.mapping.value.dn={{ NIFI_SECURITY_IDENTITY_MAPPING_VALUE_DN|default("$1@$2") }}
    nifi.security.identity.mapping.transform.dn={{ NIFI_SECURITY_IDENTITY_MAPPING_TRANSFORM_DN|default("NONE") }}
    nifi.security.identity.mapping.pattern.kerb={{ NIFI_SECURITY_IDENTITY_MAPPING_PATTERN_KERB|default("^(.*?)/instance@(.*?)$") }}
    nifi.security.identity.mapping.value.kerb={{ NIFI_SECURITY_IDENTITY_MAPPING_VALUE_KERB|default("$1@$2") }}
    nifi.security.identity.mapping.transform.kerb={{ NIFI_SECURITY_IDENTITY_MAPPING_TRANSFORM_KERB|default("UPPER") }}
{%  endif %}

{% if NIFI_SEC_GRP_MAP %}
    nifi.security.group.mapping.pattern.anygroup={{ NIFI_SECURITY_GROUP_MAPPING_PATTERN_ANYGROUP|default("^(.*)$") }}
    nifi.security.group.mapping.value.anygroup={{ NIFI_SECURITY_GROUP_MAPPING_VALUE_ANYGROUP|default("$1") }}
    nifi.security.group.mapping.transform.anygroup={{ NIFI_SECURITY_GROUP_MAPPING_TRANSFORM_ANYGROUP|default("LOWER") }}
{% endif %}

nifi.cluster.protocol.heartbeat.interval={{ NIFI_CLUSTER_PROTOCOL_HEARTBEAT_INTERVAL|default("5 sec") }}
nifi.cluster.protocol.is.secure={{ NIFI_CLUSTER_PROTOCOL_IS_SECURE|default("false") }}

nifi.cluster.is.node={{ NIFI_CLUSTER_IS_NODE|default("false") }}
nifi.cluster.node.address={{ NIFI_CLUSTER_NODE_ADDRESS }}
nifi.cluster.node.protocol.port={{ NIFI_CLUSTER_NODE_PROTOCOL_PORT }}
nifi.cluster.node.protocol.threads={{ NIFI_CLUSTER_NODE_PROTOCOL_THREADS|default("10") }}
nifi.cluster.node.protocol.max.threads={{ NIFI_CLUSTER_NODE_PROTOCOL_MAX_THREADS|default("50") }}
nifi.cluster.node.event.history.size={{ NIFI_CLUSTER_NODE_EVENT_HISTORY_SIZE|default("25") }}
nifi.cluster.node.connection.timeout={{ NIFI_CLUSTER_NODE_CONNECTION_TIMEOUT|default("5 sec") }}
nifi.cluster.node.read.timeout={{ NIFI_CLUSTER_NODE_READ_TIMEOUT|default("5 sec") }}
nifi.cluster.node.max.concurrent.requests={{ NIFI_CLUSTER_NODE_MAX_CONCURRENT_REQUESTS|default("100") }}
nifi.cluster.firewall.file={{ NIFI_CLUSTER_FIREWALL_FILE }}
nifi.cluster.flow.election.max.wait.time={{ NIFI_CLUSTER_FLOW_ELECTION_MAX_WAIT_TIME|default("5 mins") }}
nifi.cluster.flow.election.max.candidates={{ NIFI_CLUSTER_FLOW_ELECTION_MAX_CANDIDATES }}

nifi.cluster.load.balance.host={{ NIFI_CLUSTER_LOAD_BALANCE_HOST }}
nifi.cluster.load.balance.port={{ NIFI_CLUSTER_LOAD_BALANCE_PORT|default("6342") }}
nifi.cluster.load.balance.connections.per.node={{ NIFI_CLUSTER_LOAD_BALANCE_CONNECTIONS_PER_NODE|default("4") }}
nifi.cluster.load.balance.max.thread.count={{ NIFI_CLUSTER_LOAD_BALANCE_MAX_THREAD_COUNT|default("8") }}
nifi.cluster.load.balance.comms.timeout={{ NIFI_CLUSTER_LOAD_BALANCE_COMMS_TIMEOUT|default("30 sec") }}

nifi.zookeeper.connect.string={{ NIFI_ZOOKEEPER_CONNECT_STRING }}
nifi.zookeeper.connect.timeout={{ NIFI_ZOOKEEPER_CONNECT_TIMEOUT|default("3 secs") }}
nifi.zookeeper.session.timeout={{ NIFI_ZOOKEEPER_SESSION_TIMEOUT|default("3 secs") }}
nifi.zookeeper.root.node={{ NIFI_ZOOKEEPER_ROOT_NODE|default("/nifi") }}

nifi.zookeeper.auth.type={{ NIFI_ZOOKEEPER_AUTH_TYPE }}
nifi.zookeeper.kerberos.removeHostFromPrincipal={{ NIFI_ZOOKEEPER_KERBEROS_REMOVEHOSTFROMPRINCIPAL }}
nifi.zookeeper.kerberos.removeRealmFromPrincipal={{ NIFI_ZOOKEEPER_KERBEROS_REMOVEREALMFROMPRINCIPAL }}

nifi.kerberos.krb5.file={{ NIFI_KERBEROS_KRB5_FILE }}

nifi.kerberos.service.principal={{ NIFI_KERBEROS_SERVICE_PRINCIPAL }}
nifi.kerberos.service.keytab.location={{ NIFI_KERBEROS_SERVICE_KEYTAB_LOCATION }}

nifi.kerberos.spnego.principal={{ NIFI_KERBEROS_SPNEGO_PRINCIPAL }}
nifi.kerberos.spnego.keytab.location={{ NIFI_KERBEROS_SPNEGO_KEYTAB_LOCATION }}
nifi.kerberos.spnego.authentication.expiration={{ NIFI_KERBEROS_SPNEGO_AUTHENTICATION_EXPIRATION|default("12 hours") }}

nifi.variable.registry.properties={{ NIFI_VARIABLE_REGISTRY_PROPERTIES }}
